name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [amd64, arm64]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker base image
        id: base_cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/docker
          key: base-${{ matrix.architecture }}-${{ github.sha }}
          restore-keys: |
            base-${{ matrix.architecture }}-
      
      - name: Build base image
        if: steps.base_cache.outputs.cache-hit != 'true'
        run: |
          docker buildx build --platform linux/${{ matrix.architecture }} -t rosbot-base:${{ matrix.architecture }} ./docker/base
      
      - name: Cache Docker package image
        id: package_cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/docker
          key: package-${{ matrix.architecture }}-${{ github.sha }}
          restore-keys: |
            package-${{ matrix.architecture }}-
      
      - name: Build package image
        if: steps.package_cache.outputs.cache-hit != 'true'
        run: |
          docker buildx build --platform linux/${{ matrix.architecture }} -t rosbot-packages:${{ matrix.architecture }} ./docker/package

      - name: Cache Docker source image
        id: source_cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/docker
          key: source-${{ matrix.architecture }}-${{ github.sha }}
          restore-keys: |
            source-${{ matrix.architecture }}-
      
      - name: Build source code image
        if: steps.source_cache.outputs.cache-hit != 'true'
        run: |
          docker buildx build --platform linux/${{ matrix.architecture }} -t rosbot-local:${{ matrix.architecture }} ./docker/source --build-arg ARCH=${{ matrix.architecture }}

      - name: Save source code image as artifact
        if: steps.source_cache.outputs.cache-hit != 'true'
        uses: actions/upload-artifact@v3
        with:
          name: rosbot-local-image-${{ matrix.architecture }}
          path: ./docker/source/*.tar
