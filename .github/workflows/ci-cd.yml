name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        architecture: [amd64, arm64]  # Multiple architectures
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Cache Docker layers to speed up builds
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: ~/.cache/docker
          key: ${{ runner.os }}-docker-${{ matrix.architecture }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-docker-${{ matrix.architecture }}-

      # Build the rosbot-base image locally
      - name: Build rosbot-base image
        run: |
          docker buildx build --platform linux/${{ matrix.architecture }} -t rosbot-base:latest ./docker/base --load

      # Build the rosbot-packages image using the rosbot-base image locally built
      - name: Build rosbot-packages image
        run: |
          docker buildx build --platform linux/${{ matrix.architecture }} -t rosbot-packages:latest ./docker/package --build-arg BASE_IMAGE=rosbot-base:latest --load

      # Build the rosbot-local image using the rosbot-base image locally built
      - name: Build rosbot-local image
        run: |
          docker buildx build --platform linux/${{ matrix.architecture }} -t rosbot-local:latest ./docker/source --build-arg BASE_IMAGE=rosbot-base:latest --load
